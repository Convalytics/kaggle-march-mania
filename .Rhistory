cast(o.order_dte as date) as order_dte,
year(o.order_dte) as order_year,
month(o.order_dte) as order_month,
DATEPART(wk, o.order_dte) as order_week,
day(o.order_dte) as order_day,
count(distinct o.order_cde) as Volume
from vs_order o with(NOLOCK)
where o.product_cde in ('TS','TU','IA')
and o.order_dte >= '2013-01-01'
group by
cast(o.order_dte as date),
year(o.order_dte),
month(o.order_dte),
DATEPART(wk, o.order_dte),
day(o.order_dte)
order by
cast(o.order_dte as date)
"
# Database Connection -----------------------------------------------------------
vision <- odbcDriverConnect('driver={SQL Server};server=pitdw-misetl-01\\misetl_proc;database=Vision6_STDBY_SL;trusted_connection=true')
# Query for data
Orders <- sqlQuery(vision,GetVolumeByDay )   #   dataconnection,query
# Close Data Connection
odbcCloseAll()  # Used to close all connections.
names(Orders)
Orders$order_dte <- as.Date(Orders$order_dte)
Orders$yearMonth <- format(Orders$order_dte, "%Y-%m")
NewOrders <- subset(Orders, Orders$order_dte >= '2010-01-01')
OrdersByYear <- ddply(Orders,~order_year,summarize,OrderVol=sum(Volume))
OrdersByYearMonth <- ddply(NewOrders,~yearMonth,summarize,OrderVol=sum(Volume))
OrdersByWeek <- ddply(Orders,~order_week,summarize,OrderVol=sum(Volume))
OrdersByWeek <- subset(OrdersByWeek, OrdersByWeek$order_week < '48')
OrdersByWeek <- subset(OrdersByWeek, OrdersByWeek$order_week > '1')
# hist(nrow(subset(Titles,Titles$InSLA=="Y")))
# plot(density(A=="Y"))), xlab = "SLA", main = "")
# ggplot(Orders, aes(x=order_year, y="Volume")) + geom_histogram()
# plot(NewOrders$order_dte, NewOrders$Volume)
# describe(Orders)
#-- Daily Forecast
OrderFit <- auto.arima(NewOrders$Volume)
plot(forecast(OrderFit))  #, shadecols="oldstyle")
require(beeswarm)
library(RODBC)
library(scales)
library(gridExtra)
library(ggplot2)
# ---------------------------------------------------------------------------------
AllProdsThisMonth <-
"select
orderNum,
CorV,
prodCategory,
propState,
minInvoiceYear,
minInvoiceMonth,
sum(totalAmount) as TotalFee
from cv_combined
where minInvoiceDate >= '2013-09-01'
and totalAmount > 0
group by orderNum,
CorV,
prodCategory,
propState,
minInvoiceYear,
minInvoiceMonth
order by orderNum,
CorV,
prodCategory,
minInvoiceYear,
minInvoiceMonth"
OneProdThisYear <-
"select
orderNum,
CorV,
prodCategory,
propState,
minInvoiceYear,
minInvoiceMonth,
sum(totalAmount) as TotalFee
from cv_combined
where minInvoiceDate >= '2013-01-01'
and prodCategory = 'REFITITLE'
and totalAmount > 0
group by orderNum,
CorV,
prodCategory,
propState,
minInvoiceYear,
minInvoiceMonth
order by orderNum,
CorV,
prodCategory,
minInvoiceYear,
minInvoiceMonth"
# Database Connection -----------------------------------------------------------
cogs <- odbcDriverConnect('driver={SQL Server};server=(local);database=COGS_SL;trusted_connection=true')
# Query for data
AllProds <- sqlQuery(cogs,AllProdsThisMonth )   #   dataconnection,query
OneProd <- sqlQuery(cogs,OneProdThisYear )      #   dataconnection,query
# Close Data Connection
odbcCloseAll()  # Used to close all connections.
#names(AllProds)
#-------------------------------------------------------------------------------------
# Work with the data:
OneProdThisMonth <- subset(AllProds, prodCategory =='REFITITLE')
qplot(factor(lowDataMonth),TotalFee,data=OneProd, geom="boxplot") +
#theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_continuous(labels=dollar) +
labs(title="COGS Fees by Month (One Product, This Year)",x="Invoice Month",y="Total Fee") +
stat_summary(fun.y='mean', geom='point',size = 3, color='red')  +
FeesByProdByMonth + scale_y_log10()
qplot(factor(lowDataMonth),TotalFee,data=OneProd, geom="boxplot") +
#theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_continuous(labels=dollar) +
labs(title="COGS Fees by Month (One Product, This Year)",x="Invoice Month",y="Total Fee") +
stat_summary(fun.y='mean', geom='point',size = 3, color='red')
OneProdThisMonth
OneProd
require(beeswarm)
library(RODBC)
library(scales)
library(gridExtra)
library(ggplot2)
# ---------------------------------------------------------------------------------
AllProdsThisMonth <-
"select
orderNum,
CorV,
prodCategory,
propState,
minInvoiceYear,
minInvoiceMonth,
sum(totalAmount) as TotalFee
from cv_combined
where minInvoiceDate >= '2013-09-01'
and totalAmount > 0
group by orderNum,
CorV,
prodCategory,
propState,
minInvoiceYear,
minInvoiceMonth
order by orderNum,
CorV,
prodCategory,
minInvoiceYear,
minInvoiceMonth"
OneProdThisYear <-
"select
orderNum,
CorV,
prodCategory,
propState,
minInvoiceYear,
minInvoiceMonth,
sum(totalAmount) as TotalFee
from cv_combined
where minInvoiceDate >= '2013-01-01'
and prodCategory = 'REFITITLE'
and propState = 'NC'
and totalAmount > 0
group by orderNum,
CorV,
prodCategory,
propState,
minInvoiceYear,
minInvoiceMonth
order by orderNum,
CorV,
prodCategory,
minInvoiceYear,
minInvoiceMonth"
# Database Connection -----------------------------------------------------------
cogs <- odbcDriverConnect('driver={SQL Server};server=(local);database=COGS_SL;trusted_connection=true')
# Query for data
#AllProds <- sqlQuery(cogs,AllProdsThisMonth )   #   dataconnection,query
OneProd <- sqlQuery(cogs,OneProdThisYear )      #   dataconnection,query
# Close Data Connection
odbcCloseAll()  # Used to close all connections.
qplot(factor(lowDataMonth),TotalFee,data=OneProd, geom="boxplot") +
#theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_continuous(labels=dollar) +
labs(title="COGS Fees by Month (One Product, This Year)",x="Invoice Month",y="Total Fee") +
stat_summary(fun.y='mean', geom='point',size = 3, color='red')
names(OneProd)
qplot(factor(minInvoiceMonth),TotalFee,data=OneProd, geom="boxplot") +
#theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_continuous(labels=dollar) +
labs(title="COGS Fees by Month (One Product, This Year)",x="Invoice Month",y="Total Fee") +
stat_summary(fun.y='mean', geom='point',size = 3, color='red')
qplot(factor(minInvoiceMonth),TotalFee,data=OneProd, geom="violinplot") +
#theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_continuous(labels=dollar) +
labs(title="COGS Fees by Month (One Product, This Year)",x="Invoice Month",y="Total Fee") +
stat_summary(fun.y='mean', geom='point',size = 3, color='red')
qplot(factor(minInvoiceMonth),TotalFee,data=OneProd, geom="violin") +
#theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_continuous(labels=dollar) +
labs(title="COGS Fees by Month (One Product, This Year)",x="Invoice Month",y="Total Fee") +
stat_summary(fun.y='mean', geom='point',size = 3, color='red')
require(beeswarm)
library(RODBC)
library(scales)
library(gridExtra)
library(ggplot2)
library(rpart)
library(tree)
library(sm)
library(psych)
library(forecast)
library(plyr)
# ---------------------------------------------------------------------------------
GetVolumeByDay <-
"
select
cast(o.order_dte as date) as order_dte,
year(o.order_dte) as order_year,
month(o.order_dte) as order_month,
DATEPART(wk, o.order_dte) as order_week,
day(o.order_dte) as order_day,
count(distinct o.order_cde) as Volume
from vs_order o with(NOLOCK)
where o.product_cde in ('TS','TU','IA')
and o.order_dte >= '2013-01-01'
group by
cast(o.order_dte as date),
year(o.order_dte),
month(o.order_dte),
DATEPART(wk, o.order_dte),
day(o.order_dte)
order by
cast(o.order_dte as date)
"
# Database Connection -----------------------------------------------------------
vision <- odbcDriverConnect('driver={SQL Server};server=pitdw-misetl-01\\misetl_proc;database=Vision6_STDBY_SL;trusted_connection=true')
# Query for data
Orders <- sqlQuery(vision,GetVolumeByDay )   #   dataconnection,query
# Close Data Connection
odbcCloseAll()  # Used to close all connections.
names(Orders)
Orders$order_dte <- as.Date(Orders$order_dte)
Orders$yearMonth <- format(Orders$order_dte, "%Y-%m")
NewOrders <- subset(Orders, Orders$order_dte >= '2010-01-01')
OrdersByYear <- ddply(Orders,~order_year,summarize,OrderVol=sum(Volume))
OrdersByYearMonth <- ddply(NewOrders,~yearMonth,summarize,OrderVol=sum(Volume))
OrdersByWeek <- ddply(Orders,~order_week,summarize,OrderVol=sum(Volume))
OrdersByWeek <- subset(OrdersByWeek, OrdersByWeek$order_week < '48')
OrdersByWeek <- subset(OrdersByWeek, OrdersByWeek$order_week > '1')
# hist(nrow(subset(Titles,Titles$InSLA=="Y")))
# plot(density(A=="Y"))), xlab = "SLA", main = "")
# ggplot(Orders, aes(x=order_year, y="Volume")) + geom_histogram()
# plot(NewOrders$order_dte, NewOrders$Volume)
# describe(Orders)
#-- Daily Forecast
OrderFit <- auto.arima(NewOrders$Volume)
plot(forecast(OrderFit))  #, shadecols="oldstyle")
require(beeswarm)
library(RODBC)
library(scales)
library(gridExtra)
library(ggplot2)
# ---------------------------------------------------------------------------------
AllProdsThisMonth <-
"select
orderNum,
CorV,
prodCategory,
propState,
minInvoiceYear,
minInvoiceMonth,
sum(totalAmount) as TotalFee
from cv_combined
where minInvoiceDate >= '2013-09-01'
and totalAmount > 0
group by orderNum,
CorV,
prodCategory,
propState,
minInvoiceYear,
minInvoiceMonth
order by orderNum,
CorV,
prodCategory,
minInvoiceYear,
minInvoiceMonth"
OneProdThisYear <-
"select
orderNum,
CorV,
prodCategory,
propState,
minInvoiceYear,
minInvoiceMonth,
sum(totalAmount) as TotalFee
from cv_combined
where minInvoiceDate >= '2013-01-01'
--and prodCategory = 'REFITITLE'
and prodType = 'br'
and propState = 'NC'
and totalAmount > 0
group by orderNum,
CorV,
prodCategory,
propState,
minInvoiceYear,
minInvoiceMonth
order by orderNum,
CorV,
prodCategory,
minInvoiceYear,
minInvoiceMonth"
# Database Connection -----------------------------------------------------------
cogs <- odbcDriverConnect('driver={SQL Server};server=(local);database=COGS_SL;trusted_connection=true')
# Query for data
#AllProds <- sqlQuery(cogs,AllProdsThisMonth )   #   dataconnection,query
OneProd <- sqlQuery(cogs,OneProdThisYear )      #   dataconnection,query
# Close Data Connection
odbcCloseAll()  # Used to close all connections.
#names(AllProds)
#-------------------------------------------------------------------------------------
# Work with the data:
OneProdThisMonth <- subset(AllProds, prodCategory =='REFITITLE')
qplot(factor(minInvoiceMonth),TotalFee,data=OneProd, geom="violin") +
#theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_continuous(labels=dollar) +
labs(title="COGS Fees by Month (One Product, This Year)",x="Invoice Month",y="Total Fee") +
stat_summary(fun.y='mean', geom='point',size = 3, color='red')
qplot(factor(minInvoiceMonth),TotalFee,data=OneProd, geom="boxplot") +
#theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_continuous(labels=dollar) +
labs(title="COGS Fees by Month (One Product, This Year)",x="Invoice Month",y="Total Fee") +
stat_summary(fun.y='mean', geom='point',size = 3, color='red')
ggplot(data = OneProd, aes(stat="identity")) +
geom_bar(aes(fill=factor(minInvoiceMonth), x=minInvoiceMonth)) +
stat_bin(geom="text", aes(x=minInvoiceMonth, label=..count.., vjust=-.3)) +
#theme(axis.text.x = element_text(angle = 50, hjust = 1)) +
labs(title="COGS Volume by Month (One Product, This Year)",x="Invoice Month",y="Order Volume") +
guides(fill=FALSE)
qplot(factor(minInvoiceMonth),TotalFee,data=OneProd, geom="boxplot") +
#theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_continuous(labels=dollar) +
labs(title="COGS Fees by Month (One Product, This Year)",x="Invoice Month",y="Total Fee") +
stat_summary(fun.y='mean', geom='point',size = 3, color='red')
ggplot(data = OneProd, aes(stat="identity")) +
geom_bar(aes(fill=factor(minInvoiceMonth), x=minInvoiceMonth)) +
stat_bin(geom="text", aes(x=minInvoiceMonth, label=..count.., vjust=-.3)) +
#theme(axis.text.x = element_text(angle = 50, hjust = 1)) +
labs(title="COGS Volume by Month (One Product, This Year)",x="Invoice Month",y="Order Volume") +
guides(fill=FALSE)
require(beeswarm)
library(RODBC)
library(scales)
library(gridExtra)
library(ggplot2)
# ---------------------------------------------------------------------------------
AllProdsThisMonth <-
"select
orderNum,
CorV,
prodCategory,
propState,
minInvoiceYear,
minInvoiceMonth,
sum(totalAmount) as TotalFee
from cv_combined
where minInvoiceDate >= '2013-09-01'
and totalAmount > 0
group by orderNum,
CorV,
prodCategory,
propState,
minInvoiceYear,
minInvoiceMonth
order by orderNum,
CorV,
prodCategory,
minInvoiceYear,
minInvoiceMonth"
OneProdThisYear <-
"select
orderNum,
CorV,
prodCategory,
propState,
minInvoiceYear,
minInvoiceMonth,
sum(totalAmount) as TotalFee
from cv_combined
where minInvoiceDate >= '2013-01-01'
--and prodCategory = 'REFITITLE'
and prodType = 'tp'
and propState = 'NC'
and totalAmount > 0
group by orderNum,
CorV,
prodCategory,
propState,
minInvoiceYear,
minInvoiceMonth
order by orderNum,
CorV,
prodCategory,
minInvoiceYear,
minInvoiceMonth"
# Database Connection -----------------------------------------------------------
cogs <- odbcDriverConnect('driver={SQL Server};server=(local);database=COGS_SL;trusted_connection=true')
# Query for data
#AllProds <- sqlQuery(cogs,AllProdsThisMonth )   #   dataconnection,query
OneProd <- sqlQuery(cogs,OneProdThisYear )      #   dataconnection,query
# Close Data Connection
odbcCloseAll()  # Used to close all connections.
#names(AllProds)
#-------------------------------------------------------------------------------------
# Work with the data:
OneProdThisMonth <- subset(AllProds, prodCategory =='REFITITLE')
qplot(factor(minInvoiceMonth),TotalFee,data=OneProd, geom="boxplot") +
#theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_continuous(labels=dollar) +
labs(title="COGS Fees by Month (One Product, This Year)",x="Invoice Month",y="Total Fee") +
stat_summary(fun.y='mean', geom='point',size = 3, color='red')
require(beeswarm)
library(RODBC)
library(scales)
library(gridExtra)
library(ggplot2)
# ---------------------------------------------------------------------------------
AllProdsThisMonth <-
"select
orderNum,
CorV,
prodCategory,
propState,
minInvoiceYear,
minInvoiceMonth,
sum(totalAmount) as TotalFee
from cv_combined
where minInvoiceDate >= '2013-09-01'
and totalAmount > 0
group by orderNum,
CorV,
prodCategory,
propState,
minInvoiceYear,
minInvoiceMonth
order by orderNum,
CorV,
prodCategory,
minInvoiceYear,
minInvoiceMonth"
OneProdThisYear <-
"select
orderNum,
CorV,
prodCategory,
propState,
minInvoiceYear,
minInvoiceMonth,
sum(totalAmount) as TotalFee
from cv_combined
where minInvoiceDate >= '2013-01-01'
--and prodCategory = 'REFITITLE'
and prodType = 'ot'
and propState = 'NC'
and totalAmount > 0
group by orderNum,
CorV,
prodCategory,
propState,
minInvoiceYear,
minInvoiceMonth
order by orderNum,
CorV,
prodCategory,
minInvoiceYear,
minInvoiceMonth"
# Database Connection -----------------------------------------------------------
cogs <- odbcDriverConnect('driver={SQL Server};server=(local);database=COGS_SL;trusted_connection=true')
# Query for data
#AllProds <- sqlQuery(cogs,AllProdsThisMonth )   #   dataconnection,query
OneProd <- sqlQuery(cogs,OneProdThisYear )      #   dataconnection,query
# Close Data Connection
odbcCloseAll()  # Used to close all connections.
#names(AllProds)
#-------------------------------------------------------------------------------------
# Work with the data:
OneProdThisMonth <- subset(AllProds, prodCategory =='REFITITLE')
qplot(factor(minInvoiceMonth),TotalFee,data=OneProd, geom="boxplot") +
#theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_continuous(labels=dollar) +
labs(title="COGS Fees by Month (One Product, This Year)",x="Invoice Month",y="Total Fee") +
stat_summary(fun.y='mean', geom='point',size = 3, color='red')
# Kaggle March Mania Competition
# Set Working Directory
setwd('C:\Users\jgreen\Documents\GitHub\kaggle-march-mania')
setwd("C:\Users\jgreen\Documents\GitHub\kaggle-march-mania")
# Kaggle March Mania Competition
# Set Working Directory
setwd("C:\\Users\\jgreen\\Documents\\GitHub\\kaggle-march-mania")
getwd()
regular_season_results <- read.csv("~/GitHub/kaggle-march-mania/regular_season_results.csv")
View(regular_season_results)
tourney_results <- read.csv("~/GitHub/kaggle-march-mania/tourney_results.csv")
View(tourney_results)
sample_submission <- read.csv("~/GitHub/kaggle-march-mania/sample_submission.csv")
View(sample_submission)
table(regular_season_results$wloc)
table(regular_season_results$wloc ~ regular_season_results$wteam)
submission <- sample_submission
submission$lowTeam <- substr(submission$id,3,5)
submission
submission$highTeam <- substr(submission$id,7,9)
submission
